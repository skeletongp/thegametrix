{"version":3,"sources":["assets/gametrix.png","components/elements/Infopop.js","components/sections/Menu.js","components/elements/GameCard.js","components/hooks/useGames.js","components/sections/Loading.js","components/pages/Games.js","components/elements/Banner.js","components/pages/Home.js","components/pages/Populars.js","components/elements/CatCard.js","components/pages/Categories.js","components/sections/Paths.js","App.js","index.js"],"names":["Infopop","props","text","useState","anchorEl","setAnchorEl","reference","useRef","open","Boolean","id","undefined","aria-describedby","color","size","className","onClick","current","ref","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","children","Menu","items","src","logo","alt","Object","keys","map","key","index","activeClassName","exact","to","GameCard","image","title","short","platform","url","Card","height","width","CardBody","pad","CardHeader","alignContent","style","backgroundImage","CardFooter","href","target","rel","View","useGames","uri","params","games","setGame","error","setError","useEffect","get","process","headers","then","data","catch","err","Loading","Spinner","message","start","end","withRouter","state","setState","setText","page","setPage","value","setValue","location","search","length","substring","opciones","name","Select","options","find","o","onChange","option","Pagination","numberItems","e","startIndex","endIndex","step","slice","g","thumbnail","game_url","short_description","Banner","range","Home","page_size","ordering","Populars","date","release_date","CatCard","Categories","categories","c","Paths","path","App","Grommet","plain","render","document","getElementById"],"mappings":"uKAAe,MAA0B,qC,+BCsD1BA,EAlDC,SAACC,EAAD,GAAkB,EAAVC,KAAW,IAAD,EACAC,mBAAS,MADT,mBACzBC,EADyB,KACfC,EADe,KAE1BC,EAAYC,mBAUZC,EAAOC,QAAQL,GACfM,EAAKF,EAAO,sBAAmBG,EAErC,OACE,gCACE,sBACEC,mBAAkBF,EAClBG,MAAM,QACNC,KAAK,SACLC,UAAU,8DACVC,QAlBc,WAClBX,EAAYC,EAAUW,UAkBlBC,IAAKZ,EANP,SAQKL,EAAMC,OAEX,cAACiB,EAAA,EAAD,CACET,GAAIA,EACJK,UAAU,WACVP,KAAMA,EACNJ,SAAUA,EACVgB,QAxBc,WAClBf,EAAY,OAyBRgB,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,UAbhB,SAgBMtB,EAAMwB,eCoEHC,EA/GF,WACX,IAAMC,EAAQ,CACZ,IAAK,OACL,YAAa,YACb,SAAU,mBACV,cAAe,iBAEjB,OACE,qBAAKZ,UAAU,gDAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKa,IAAKC,EAAMC,IAAI,OAAOf,UAAU,WAEvC,sBAAKA,UAAU,kDAAf,UACGgB,OAAOC,KAAKL,GAAOM,KAAI,SAAUC,EAAKC,GACrC,OACE,cAAC,IAAD,CAEEC,gBAAgB,oCAChBC,OAAK,EACLC,GAAIJ,EAJN,SAMGP,EAAMO,IALFA,MAUX,cAAC,EAAD,CAAShC,KAAK,cAAd,SACE,sBAAKa,UAAU,8CAAf,UACE,cAAC,IAAD,CACEqB,gBAAgB,oCAChBrB,UAAU,qBACVsB,OAAK,EACLC,GAAG,WAJL,0BAQA,cAAC,IAAD,CACEF,gBAAgB,oCAChBrB,UAAU,sBACVsB,OAAK,EACLC,GAAG,WAJL,iCAWN,qBAAKvB,UAAU,mDAAf,SACE,cAAC,EAAD,CAASb,KAAK,UAAd,SACA,sBAAKa,UAAU,wDAAf,UACE,cAAC,IAAD,CAEEqB,gBAAgB,oCAChBC,OAAK,EACJtB,UAAU,qBACXuB,GAAG,IALL,iBACO,GAQP,cAAC,IAAD,CAEEF,gBAAgB,oCAChBC,OAAK,EACJtB,UAAU,qBACXuB,GAAG,SALL,mBACO,GAQP,cAAC,IAAD,CAEEF,gBAAgB,oCAChBC,OAAK,EACJtB,UAAU,qBACXuB,GAAG,cALL,0BACO,GAQP,cAAC,IAAD,CAEEF,gBAAgB,oCAChBC,OAAK,EACJtB,UAAU,qBACXuB,GAAG,YALL,sBACO,GAQP,cAAC,IAAD,CACIF,gBAAgB,oCAChBrB,UAAU,qBACVsB,OAAK,EACLC,GAAG,WAJP,0BAQE,cAAC,IAAD,CACEF,gBAAgB,oCAChBrB,UAAU,sBACVsB,OAAK,EACLC,GAAG,WAJL,sC,qDC5CCC,EAjDE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACjD,OACE,mCACE,eAACC,EAAA,EAAD,CACEC,OAAO,QACPC,MAAM,SACNhC,UAAU,wCAHZ,UAKE,eAACiC,EAAA,EAAD,CAAUC,IAAI,OAAOlC,UAAU,qBAA/B,UACE,eAACmC,EAAA,EAAD,CACEC,aAAa,SACbpC,UAAU,iFAFZ,UAIE,sBAAMA,UAAU,WAAhB,SAA4B0B,IAC5B,sBAAM1B,UAAU,iCAAiC0B,MAAOE,EAAxD,SACGA,OAGL,qBACE5B,UAAU,0DACVqC,MAAO,CAAEC,gBAAgB,QAAD,OAAUb,EAAV,YAG5B,eAACc,EAAA,EAAD,CAAYvC,UAAU,iBAAtB,UACE,cAAC,EAAD,CAASb,KAAK,WAAd,SACE,mBAAGa,UAAU,WAAb,SAAyB2B,MAE3B,mBAAGa,KAAMX,EAAKY,OAAO,SAASC,IAAI,aAAlC,SACE,cAACC,EAAA,EAAD,CACE7C,MAAM,QACNC,KAAK,SACLC,UAAU,8E,QCRT4C,EA1BE,SAACC,EAAKC,GAAa,IAAD,EACR1D,qBADQ,mBAC1B2D,EAD0B,KACnBC,EADmB,OAEP5D,qBAFO,mBAE1B6D,EAF0B,KAEnBC,EAFmB,KAuBjC,OAnBAC,qBAAU,WACRC,cAAI,GAAD,OACEC,2DADF,OACmCR,GACpC,CACES,QAAS,CACP,iBAAkBD,qDACjB,eAAgB,mBAChB,kBAAmBA,8CAEtBP,OAAOA,IAGRS,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPR,EAAQQ,MAETC,OAAM,SAACC,GACNR,EAASQ,QAEZ,CAACb,EAAKC,IACF,CAACC,EAAOE,I,2BClBFU,EALD,kBACd,qBAAK3D,UAAU,8FAAf,SACG,cAAC4D,EAAA,EAAD,CAAS9D,MAAM,MAAMC,KAAK,QAAQ8D,QAAS,CAACC,MAAM,WAAWC,IAAI,iBCiGrDC,eA/FD,SAAC9E,GAAW,IAAD,EACGE,mBAASF,EAAM4D,QADlB,mBAChBmB,EADgB,KACTC,EADS,OAEC9E,mBAASF,EAAMC,MAFhB,mBAEhBA,EAFgB,KAEVgF,EAFU,OAGC/E,mBAAS,CAAE0E,MAAO,EAAGC,IAAK,KAH3B,mBAGhBK,EAHgB,KAGVC,EAHU,OAIGjF,mBAAS,gBAJZ,mBAIhBkF,EAJgB,KAITC,EAJS,OAMA3B,EAAS,QAASqB,EAAOG,GANzB,mBAMhBrB,EANgB,KAMTE,EANS,KAevBE,qBAAU,WACRe,EAAS,2BACJD,GADG,IAEN,UAAWK,OAEZ,CAACA,IAEJnB,qBAAU,WAC2B,GAA9BjE,EAAMsF,SAASC,OAAOC,SACzBR,EAAS,2BACJD,GADG,IAEN,SAAW,GAAX,OAAe/E,EAAMsF,SAASC,OAAOE,UAAU,OAEjDR,EAAQ,GAAD,OACFjF,EAAMsF,SAASC,OAAOE,UAAU,QAGvC,IAEF,IAAMC,EAAW,CACf,CAAEC,KAAM,qBAAsBP,MAAO,iBACrC,CAAEO,KAAM,2BAA4BP,MAAO,cAC3C,CAAEO,KAAM,sBAAuBP,MAAO,gBACtC,CAAEO,KAAM,0BAA2BP,MAAO,cAE5C,OAAIrB,EAEA,qCACE,oBAAIjD,UAAU,gCAAd,2BACA,+FAKJ,qCACE,oBAAIA,UAAU,8EAAd,SACGb,IAEH,sBAAKa,UAAU,qEAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAAC8E,EAAA,EAAD,CACEC,QAAS,CACP,qBACA,sBACA,2BACA,2BAEFT,MAAOM,EAASI,MAAK,SAACC,GAAD,OAAOA,EAAEX,QAAUA,KAAOO,KAC/CK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OACRZ,EAASK,EAASI,MAAK,SAACC,GAAD,OAAOA,EAAEJ,OAASM,KAAQb,YAItDvB,GACC,cAACqC,EAAA,EAAD,CAAYC,YAAatC,EAAM2B,OAAQQ,SA7DhC,SAACI,GACdjB,EAAQ,CACNP,MAAOwB,EAAEC,WAAa,EACtBxB,IAAKuB,EAAEE,YA0DsDC,KAAM,QAGnE,qBAAKzF,UAAU,qFAAf,SACG+C,EACCA,EACG2C,MAAMtB,EAAKN,MAAQ,EAAGM,EAAKL,KAC3B7C,KAAI,SAACyE,GAAD,OACH,cAAC,EAAD,CACEjE,MAAOiE,EAAEjE,MACTD,MAAOkE,EAAEC,UAEThE,SAAU+D,EAAE/D,SACZC,IAAK8D,EAAEE,SACPlG,GAAIgG,EAAEhG,GACNgC,MAAK,UAAKgE,EAAEG,oBAJPH,EAAEhG,OAQb,cAAC,EAAD,YCxEKoG,EArBA,SAAC,GAAqB,IAAnBvC,EAAkB,EAAlBA,KAAMwC,EAAY,EAAZA,MACtB,OACE,qBAAKhG,UAAU,mHAAf,SACGwD,GACCA,EACGkC,MAAMM,EAAMlC,MAAOkC,EAAMjC,KACzB7C,KAAI,SAACyE,GAAD,OACH,cAAC,EAAD,CAEEjE,MAAOiE,EAAEjE,MACTD,MAAOkE,EAAEC,UACTjE,MAAOgE,EAAEG,kBACTjE,IAAK8D,EAAEE,SACPjE,SAAU+D,EAAE/D,SACZjC,GAAIgG,EAAEhG,IANDgG,EAAEhG,UCUNsG,EAfF,WAAO,IAAD,EACD7G,mBAAS,CAAC8G,UAAU,EAAG9B,KAAK,EAAG+B,SAAS,YAAjDlC,EADU,sBAEDrB,EAAS,QAASqB,EAAQ,IAAnClB,EAFU,oBAIjB,OACE,sBAAK/C,UAAU,OAAf,UACE,oBAAIA,UAAU,2DAAd,mCACD,cAAC,EAAD,CAAQwD,KAAMT,EAAOiD,MAAO,CAAClC,MAAM,GAAIC,IAAI,MAC3C,oBAAI/D,UAAU,oEAAd,8DAEA,cAAC,EAAD,CAAQwD,KAAMT,EAAOiD,MAAO,CAAClC,MAAM,EAAGC,IAAI,SCkBhCqC,EA5BE,WAAO,IAAD,EACLhH,mBAAS,CAAE,UAAW,eAA/B6E,EADc,sBAELrB,EAAS,QAASqB,EAAO,IAAlClB,EAFc,oBAGrB,OAEE,qBAAK/C,UAAU,2DAAf,SACG+C,EACCA,EACG2C,MAAM,EAAG,IACTxE,KAAI,SAACyE,GAAD,OACH,cAAC,EAAD,CACEjE,MAAOiE,EAAEjE,MACTD,MAAOkE,EAAEC,UAETjG,GAAIgG,EAAEhG,GACNiC,SAAU+D,EAAE/D,SACZC,IAAK8D,EAAEE,SACPQ,KAAMV,EAAEW,aACR3E,MAAOgE,EAAEG,mBALJH,EAAEhG,OASb,cAAC,EAAD,O,QCsBO4G,EA3CC,SAAC,GAAgC,IAA9B9E,EAA6B,EAA7BA,MAAOoD,EAAsB,EAAtBA,KAAMP,EAAgB,EAAhBA,MAAgB,EAAT3E,GACrC,OACE,mCACE,eAACmC,EAAA,EAAD,CACEC,OAAO,QACPC,MAAM,SACNhC,UAAU,gCAHZ,UAKE,eAACiC,EAAA,EAAD,CAAUC,IAAI,OAAOlC,UAAU,YAA/B,UACE,cAACmC,EAAA,EAAD,CACEC,aAAa,SACbpC,UAAU,6EAFZ,SAIE,sBAAMA,UAAU,WAAhB,SAA4B6E,MAG9B,qBACE7E,UAAU,mDACVqC,MAAO,CAAEC,gBAAgB,QAAD,OAAUb,EAAV,YAG5B,cAACc,EAAA,EAAD,CAAYvC,UAAU,uBAAtB,SAEE,cAAC,IAAD,CAAMuB,GAAE,gBAAW+C,GAAnB,SACE,cAAC3B,EAAA,EAAD,CACE7C,MAAM,QACNC,KAAK,SACLC,UAAU,6ECITwG,EA/BI,WAAO,IAAD,EAECpH,mBAAS,CAAC0E,MAAM,EAAGC,IAAI,IAFxB,mBAEhBK,EAFgB,KAEVC,EAFU,KAUvB,OACE,qCACA,8BACE,oBAAIrE,UAAU,8FAAd,iDAED,qBAAKA,UAAU,0CAAf,SACA,cAACoF,EAAA,EAAD,CAAYC,YAAaoB,IAAW/B,OAAOe,KAAM,EAAGP,SAZ1C,SAACI,GACZjB,EAAQ,CACNP,MAAMwB,EAAEC,WAAW,EACnBxB,IAAIuB,EAAEE,gBAYN,qBAAKxF,UAAU,2DAAf,SACGyG,IAAWf,MAAMtB,EAAKN,MAAM,EAAGM,EAAKL,KAAK7C,KAAI,SAACwF,GAE7C,OACE,cAAC,EAAD,CAAS/G,GAAI+G,EAAE/G,GAAIkF,KAAM6B,EAAE7B,KAAMP,MAAOoC,EAAEpC,MAAO7C,MAAOiF,EAAEjF,OAAYiF,EAAE/G,aCNrEgH,EAhBD,WACZ,OACE,sBAAK3G,UAAU,oBAAf,UAEE,eAAC,IAAD,CAAOsB,OAAK,EAACsF,KAAK,IAAlB,cAAuB,cAAC,EAAD,IAAvB,OACA,eAAC,IAAD,CAAOtF,OAAK,EAACsF,KAAK,SAAlB,cAA4B,cAAC,EAAD,CAAO9D,OAAQ,CAAE,UAAW,gBAAkB3D,KAAK,qBAA/E,OACA,eAAC,IAAD,CAAOmC,OAAK,EAACsF,KAAK,WAAlB,cAA8B,cAAC,EAAD,CAAO9D,OAAQ,CAAE,UAAW,eAAgB,SAAW,MAAQ3D,KAAK,sBAAlG,OACA,eAAC,IAAD,CAAOmC,OAAK,EAACsF,KAAK,cAAlB,cAAiC,cAAC,EAAD,IAAjC,OACA,eAAC,IAAD,CAAOA,KAAK,SAAZ,cAAuB,cAAC,EAAD,IAAvB,OACA,eAAC,IAAD,CAAOtF,OAAK,EAACsF,KAAK,WAAlB,cAA8B,cAAC,EAAD,CAAO9D,OAAQ,CAAE,UAAW,eAAgB,SAAW,WAAa3D,KAAK,wBAAvG,OACA,eAAC,IAAD,CAAOmC,OAAK,EAACsF,KAAK,YAAlB,cAA+B,cAAC,EAAD,IAA/B,WCGSC,MAhBf,WACE,OACE,cAACC,EAAA,EAAD,CAASC,OAAK,EAAd,SACE,eAAC,IAAD,WACE,qBAAK/G,UAAU,6BAAf,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,UACE,cAAC,EAAD,Y,OCVVgH,iBACI,cAAC,EAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.a60763f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gametrix.317d3f81.png\";","import Popover from \"@material-ui/core/Popover\";\r\n\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst Infopop = (props,{text}) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const reference = useRef();\r\n\r\n  const handleClick = () => {\r\n    setAnchorEl(reference.current);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <span\r\n        aria-describedby={id}\r\n        color=\"black\"\r\n        size=\"medium\"\r\n        className=\"hover:bg-gray-200 m-2  bg-white rounded-full cursor-pointer\"\r\n        onClick={handleClick}\r\n        ref={reference}\r\n      >\r\n          {props.text}\r\n      </span>\r\n      <Popover\r\n        id={id}\r\n        className=\" text-xs\"\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        \r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n           {props.children}\r\n        \r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Infopop;\r\n","import { NavLink } from \"react-router-dom\";\nimport logo from \"../../assets/gametrix.png\";\nimport Infopop from \"../elements/Infopop\";\n\nconst Menu = () => {\n  const items = {\n    \"/\": \"Home\",\n    \"/populars\": \"Populares\",\n    \"/games\": \"Todos los juegos\",\n    \"/categories\": \"Categorías\",\n  };\n  return (\n    <div className=\"w-full   h-full py-2  bg-white shadow-xl z-30\">\n      <div className=\"max-w-7xl mx-auto grid grid-cols-6 items-center \">\n        <div className=\"col-span-1\">\n          <img src={logo} alt=\"Logo\" className=\"w-12\" />\n        </div>\n        <div className=\"hidden md:flex justify-end col-span-5 space-x-4\">\n          {Object.keys(items).map(function (key, index) {\n            return (\n              <NavLink\n                key={key}\n                activeClassName=\"text-blue-500 font-bold underline\"\n                exact\n                to={key}\n              >\n                {items[key]}\n              </NavLink>\n            );\n          })}\n\n          <Infopop text=\"Plataformas\">\n            <div className=\"flex flex-col justify-self-center space-y-1\">\n              <NavLink\n                activeClassName=\"text-blue-500 font-bold underline\"\n                className=\"z-50 px-2 text-lg \"\n                exact\n                to=\"/windows\"\n              >\n                PC (Windows)\n              </NavLink>\n              <NavLink\n                activeClassName=\"text-blue-500 font-bold underline\"\n                className=\"z-50 px-2  text-lg \"\n                exact\n                to=\"/browser\"\n              >\n                Web Browser\n              </NavLink>\n            </div>\n          </Infopop>\n        </div>\n        <div className=\"flex md:hidden  justify-end col-span-5 z-50 px-4\">\n          <Infopop text=\"Menú\">\n          <div className=\"flex flex-col justify-self-center space-y-1 px-4 py-2\">\n            <NavLink\n              key={1}\n              activeClassName=\"text-blue-500 font-bold underline\"\n              exact\n               className=\"z-50 px-2 text-lg \"\n              to=\"/\"\n            >\n             Home\n            </NavLink>\n            <NavLink\n              key={1}\n              activeClassName=\"text-blue-500 font-bold underline\"\n              exact\n               className=\"z-50 px-2 text-lg \"\n              to=\"/games\"\n            >\n             Juegos\n            </NavLink>\n            <NavLink\n              key={1}\n              activeClassName=\"text-blue-500 font-bold underline\"\n              exact\n               className=\"z-50 px-2 text-lg \"\n              to=\"/categories\"\n            >\n             Categorías\n            </NavLink>\n            <NavLink\n              key={1}\n              activeClassName=\"text-blue-500 font-bold underline\"\n              exact\n               className=\"z-50 px-2 text-lg \"\n              to=\"/populars\"\n            >\n             Populares\n            </NavLink>\n            <NavLink\n                activeClassName=\"text-blue-500 font-bold underline\"\n                className=\"z-50 px-2 text-lg \"\n                exact\n                to=\"/windows\"\n              >\n                PC (Windows)\n              </NavLink>\n              <NavLink\n                activeClassName=\"text-blue-500 font-bold underline\"\n                className=\"z-50 px-2  text-lg \"\n                exact\n                to=\"/browser\"\n              >\n                Web Browser\n              </NavLink>\n          </div>\n          </Infopop>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { string, number } from \"prop-types\";\n\nimport { Card, CardHeader, CardFooter, CardBody } from \"grommet\";\nimport { View } from \"grommet-icons\";\nimport Infopop from \"./Infopop\";\n\nconst GameCard = ({ image, title, short, platform, url }) => {\n  return (\n    <>\n      <Card\n        height=\"small\"\n        width=\"medium\"\n        className=\"relative flex flex-col justify-center\"\n      >\n        <CardBody pad=\"none\" className=\"bg-center bg-black\">\n          <CardHeader\n            alignContent=\"center\"\n            className=\"text-sm  px-2 py-1  font-bold text-center bg-black w-full text-white z-20 mb-2\"\n          >\n            <span className=\"truncate\">{title}</span>\n            <span className=\"truncate text-xs text-blue-400\" title={platform}>\n              {platform}\n            </span>\n          </CardHeader>\n          <div\n            className=\" bg-cover bg-no-repeat bg-top bg-red-200 h-full w-full \"\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          ></div>\n        </CardBody>\n        <CardFooter className=\"z-10  bg-white\">\n          <Infopop text=\"Detalles\">\n            <p className=\"p-3 w-60\">{short}</p>\n          </Infopop>\n          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n            <View\n              color=\"black\"\n              size=\"medium\"\n              className=\"hover:bg-gray-200 m-2 p-1 bg-white rounded-full cursor-pointer\"\n            />\n          </a>\n        </CardFooter>\n      </Card>\n    </>\n  );\n};\n\nGameCard.propTypes = {\n  id: number.isRequired,\n  title: string.isRequired,\n  image: string.isRequired,\n  short: string.isRequired,\n  platform: string.isRequired,\n  url: string.isRequired,\n};\n\nexport default GameCard;\n","import { useEffect, useState } from \"react\";\r\nimport { get } from \"axios\";\r\n\r\nconst useGames = (uri, params ) => {\r\n  const [games, setGame] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    get(\r\n      `${process.env.REACT_APP_BASE_URL}${uri}`, \r\n      {\r\n        headers: {\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY ,\r\n           'Content-Type': 'application/json',\r\n           'x-rapidapi-host': process.env.REACT_APP_API_HOST,\r\n        },\r\n        params:params\r\n      }\r\n    )\r\n      .then(({ data }) => {\r\n        setGame(data)\r\n      })\r\n      .catch((err) => {\r\n        setError(err)\r\n      });\r\n  }, [uri, params]);\r\n  return [games, error];\r\n};\r\n\r\nexport default useGames;\r\n","import { Spinner } from \"grommet\";\r\n\r\n\r\nconst Loading=() =>\r\n<div className=\"fixed top-0 left-0 bg-black bg-opacity-5 w-screen h-screen flex items-center justify-center\">\r\n   <Spinner color=\"red\" size=\"large\" message={{start:'iniciado',end:\"terminad\" }}/>\r\n</div>\r\n\r\nexport default Loading;","import GameCard from \"../elements/GameCard\";\nimport useGames from \"../hooks/useGames\";\nimport { useState, useEffect } from \"react\";\nimport { Pagination, Select } from \"grommet\";\nimport Loading from \"../sections/Loading\";\nimport { withRouter } from \"react-router\";\n\nconst Games = (props) => {\n  const [state, setState] = useState(props.params);\n  const [text, setText] = useState(props.text);\n  const [page, setPage] = useState({ start: 1, end: 12 });\n  const [value, setValue] = useState(\"alphabetical\");\n\n  const [games, error] = useGames(\"games\", state, page);\n  \n  const change = (e) => {\n    setPage({\n      start: e.startIndex + 1,\n      end: e.endIndex,\n    });\n  };\n  \n  useEffect(() => {\n    setState({\n      ...state,\n      \"sort-by\": value,\n    });\n  }, [value]);\n  \n  useEffect(() => {\n     if (props.location.search.length!=0) {\n      setState({\n        ...state,\n        \"category\": `${props.location.search.substring(1)}`,\n      });\n      setText(\n        `${props.location.search.substring(1)}`\n      );\n     }\n  },[]);\n  \n  const opciones = [\n    { name: \"Ordenar por: Fecha\", value: \"realease_date\" },\n    { name: \"Ordenar por: Popularidad\", value: \"popularity\" },\n    { name: \"Ordenar por: Nombre\", value: \"alphabetical\" },\n    { name: \"Ordenar por: Relevancia\", value: \"relevance\" },\n  ];\n  if (error) {\n    return (\n      <>\n        <h1 className=\"font-bold text-center text-xl\">Hubo un error</h1>\n        <h2>Ha ocurrido un error con su solicitud y no pudo procesarse</h2>\n      </>\n    );\n  }\n  return (\n    <>\n      <h1 className=\"text-center uppercase font-bold text-lg md:text-lg lg:text-3xl my-2 lg:my-3\">\n        {text}\n      </h1>\n      <div className=\"flex justify-center lg:justify-between w-full my-2 text-white px-2\">\n        <div className=\"text-black hidden md:block\">\n          <Select\n            options={[\n              \"Ordenar por: Fecha\",\n              \"Ordenar por: Nombre\",\n              \"Ordenar por: Popularidad\",\n              \"Ordenar por: Relevancia\",\n            ]}\n            value={opciones.find((o) => o.value === value).name}\n            onChange={({ option }) =>\n              setValue(opciones.find((o) => o.name === option).value)\n            }\n          />\n        </div>\n        {games && (\n          <Pagination numberItems={games.length} onChange={change} step={12} />\n        )}\n      </div>\n      <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3 px-3 py-2 mx-2\">\n        {games ? (\n          games\n            .slice(page.start - 1, page.end)\n            .map((g) => (\n              <GameCard\n                title={g.title}\n                image={g.thumbnail}\n                key={g.id}\n                platform={g.platform}\n                url={g.game_url}\n                id={g.id}\n                short={`${g.short_description}`}\n              />\n            ))\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(Games);\n","import GameCard from \"./GameCard\";\n\nconst Banner = ({ data, range }) => {\n  return (\n    <div className=\"w-full p-4 bg-white relative shadow-xl my-2  grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n      {data &&\n        data\n          .slice(range.start, range.end)\n          .map((g) => (\n            <GameCard\n              key={g.id}\n              title={g.title}\n              image={g.thumbnail}\n              short={g.short_description}\n              url={g.game_url}\n              platform={g.platform}\n              id={g.id}\n            />\n          ))}\n    </div>\n  );\n};\n\nexport default Banner;\n","import Banner from \"../elements/Banner\";\nimport useGames from \"../hooks/useGames\";\nimport { useState } from \"react\";\n\n\nconst Home = () => {\n  const [state] = useState({page_size:4, page:1, ordering:'-rating'});\n  const [games] = useGames(\"games\", state , []);\n  \n  return (\n    <div className=\"Home\">\n      <h1 className=\"uppercase text-lg lg:text-3xl text-center font-bold my-3\">Bienvenido a Gametrix</h1>\n     <Banner data={games} range={{start:13, end:17}} />\n     <h1 className=\"uppercase text-lg lg:text-3xl text-center font-bold my-3 lg:mt-12\">Descubre los juegos Free-2-Play más populares</h1>\n\n     <Banner data={games} range={{start:0, end:4}}  />\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport GameCard from \"../elements/GameCard\";\nimport useGames from \"../hooks/useGames\";\nimport Loading from '../sections/Loading'\n\nconst Populars = () => {\n  const [state] = useState({ \"sort-by\": \"popularity\" });\n  const [games] = useGames(\"games\", state, []);\n  return (\n    \n    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 p-2\">\n      {games ? (\n        games\n          .slice(0, 12)\n          .map((g) => (\n            <GameCard\n              title={g.title}\n              image={g.thumbnail}\n              key={g.id}\n              id={g.id}\n              platform={g.platform}\n              url={g.game_url}\n              date={g.release_date}\n              short={g.short_description}\n            />\n          ))\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default Populars;\n","import { string, number } from \"prop-types\";\n\nimport { Card, CardHeader, CardFooter, CardBody } from \"grommet\";\nimport { View } from \"grommet-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst CatCard = ({ image, name, value, id }) => {\n  return (\n    <>\n      <Card\n        height=\"small\"\n        width=\"medium\"\n        className=\" flex flex-col justify-center\"\n      >\n        <CardBody pad=\"none\" className=\"bg-center\">\n          <CardHeader\n            alignContent=\"center\"\n            className=\"text-sm  px-2 py-1  font-bold text-center bg-black w-full text-white z-20 \"\n          >\n            <span className=\"truncate\">{name}</span>\n            \n          </CardHeader>\n          <div\n            className=\" bg-no-repeat bg-cover bg-center  w-full h-full \"\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          ></div>\n        </CardBody>\n        <CardFooter className=\"z-10  bg-transparent\">\n          \n          <Link to={`bycat?${value}`}>\n            <View\n              color=\"black\"\n              size=\"medium\"\n              className=\"hover:bg-gray-200 m-2 p-1 bg-white rounded-full cursor-pointer\"\n            />\n          </Link>\n        </CardFooter>\n      </Card>\n    </>\n  );\n};\n\nCatCard.propTypes = {\n  id: number.isRequired,\n  name: string.isRequired,\n  image: string.isRequired,\n  value: string.isRequired,\n};\n\nexport default CatCard;\n","import { Pagination } from \"grommet\";\nimport { categories } from \"../../data/categories.json\";\nimport CatCard from \"../elements/CatCard\";\n\nimport { useState } from \"react\";\n\nconst Categories = () => {\n\n  const [page, setPage] = useState({start:1, end:8});\n  \n  const change=(e)=>{\n    setPage({\n      start:e.startIndex+1,\n      end:e.endIndex\n    })\n  }\n  return (\n    <>\n    <div>\n      <h1 className=\"font-bold text-xl md:text-2xl lg:text-4xl uppercase text-center  my-2 mb-8 md:my-3 lg:my-12\">Juegos por categoría/Etiquetas</h1>\n    </div>\n     <div className=\"flex justify-center md:justify-end my-2\">\n     <Pagination numberItems={categories.length}step={8} onChange={change}/>\n     </div>\n\n      <div className=\"p-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {categories.slice(page.start-1, page.end).map((c) => {\n    \n          return (\n            <CatCard id={c.id} name={c.name} value={c.value} image={c.image} key={c.id} />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Categories;\n","import { Route } from \"react-router-dom\";\n\nimport Games from \"../pages/Games\";\nimport Home from \"../pages/Home\";\nimport Populars from \"../pages/Populars\";\nimport Categories from '../pages/Categories';\n\nconst Paths = () => {\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n\n      <Route exact path=\"/\"> <Home/> </Route>\n      <Route exact path=\"/games\"> <Games params={{ \"sort-by\": \"alphabetical\" }} text=\"Todos los juegos\"/> </Route>\n      <Route exact path=\"/windows\"> <Games params={{ \"sort-by\": \"alphabetical\", \"platform\":\"pc\" }} text=\"Juegos de Windows\"/> </Route>\n      <Route exact path=\"/categories\"> <Categories /> </Route>\n      <Route path=\"/bycat\" > <Games /> </Route>\n      <Route exact path=\"/browser\"> <Games params={{ \"sort-by\": \"alphabetical\", \"platform\":\"browser\" }} text=\"Juegos de Navegador\"/> </Route>\n      <Route exact path=\"/populars\"> <Populars/> </Route>\n    \n    </div>\n  );\n};\n\nexport default Paths;\n","import { HashRouter as Router, Switch } from \"react-router-dom\";\nimport { Grommet } from \"grommet\";\nimport Menu from \"./components/sections/Menu\";\nimport Paths from \"./components/sections/Paths\";\nfunction App() {\n  return (\n    <Grommet plain>\n      <Router>\n        <div className=\"sticky w-screen top-0 z-50\">\n          <Menu />\n          \n        </div>\n        <Switch>\n          <Paths />\n        </Switch>\n      </Router>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import {render} from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nrender(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}